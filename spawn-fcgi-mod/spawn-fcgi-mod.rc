#!/bin/sh
#
# /etc/rc.d/spawn-fcgi
#

if [ -f /etc/spawn-fcgi.conf ]; then
    . /etc/spawn-fcgi.conf
fi

# ABSOLUTE path to the spawn-fcgi binary
SPAWNFCGI=${SPAWNFCGI:="/usr/bin/spawn-fcgi-mod"}

# ABSOLUTE path to the PHP binary
FCGIPROGRAM=${FCGIPROGRAM:="/usr/bin/php-cgi"}

# we'll use socket by default and fallback to
# tcp port, if no socket was given
#
# ABSOLUTE path to the php-fcgi socket
FCGISOCKET=${FCGISOCKET:="/tmp/php-fcgi.sock"}
#
# php-fcgi port number
FCGIPORT=${FCGIPORT:=9000}

# ABSOLUTE path to the spawn-fcgi pid
FCGIPID=${FCGIPID:="/var/run/fcgi.pid"}

# IP addresses from which PHP should access server connections
FCGI_WEB_SERVER_ADDRS=${FCGI_WEB_SERVER_ADDRS:="127.0.0.1"}

# number of PHP children to spawn
PHP_FCGI_CHILD=${PHP_FCGI_CHILD:=200}

# maximum number of requests a single PHP process can serve before it is restarted
PHP_FCGI_MAX_REQUESTS=${PHP_FCGI_MAX_REQUESTS:=2000}

# if this script is run as root, switch to the following user
USERID=${USERID:="daemon"}
GROUPID=${GROUPID:="daemon"}

# copy the allowed environment variables
ENV="PATH="$PATH" USER="$USERID" GROUP="$GROUPID""
PHP_FCGI_MAX_REQUESTS="$PHP_FCGI_MAX_REQUESTS"

################## no config below this line

if test x$PHP_FCGI_CHILD = x; then
  PHP_FCGI_CHILD=5
fi

export PHP_FCGI_MAX_REQUESTS
export FCGI_WEB_SERVER_ADDRS

if [ -z $FCGISOCKET ]; then
	PORT_SOCKET="-p $FCGIPORT"
else
	PORT_SOCKET="-s $FCGISOCKET"
fi

EX="$SPAWNFCGI -P $FCGIPID $PORT_SOCKET -f $FCGIPROGRAM -u $USERID -g $GROUPID -C $PHP_FCGI_CHILD"

case "$1" in
start)
	# clean the environment and set up a new one
	env -i ${ENV} $EX
	chmod a+w $FCGISOCKET 2>/dev/null
;;
stop)
	kill -TERM `cat $FCGIPID`
	rm -f $FCGISOCKET
;;
restart)
	$0 stop
	sleep 2
	$0 start
;;
*)
	echo "Usage: $0 {start|stop|restart}"
	exit 1
esac

# End of file
